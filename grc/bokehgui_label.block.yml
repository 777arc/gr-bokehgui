# auto-generated by grc.converter

id: variable_bokehgui_label
label: Bokeh GUI Label
category: '[Bokeh GUI]/Bokeh GUI Widgets'
flags:
- show_id

parameters:
-   id: label
    label: Label
    dtype: string
    hide: ${ ('none' if label else 'part') }
-   id: type
    label: Type
    dtype: enum
    default: int
    options: [real, int, string, bool, raw]
    option_labels: [Float, Integer, String, Boolean, Any]
    option_attributes:
        conv: [eng_notation.str_to_num, int, str, bool, eval]
        str: [eng_notation.num_to_str, str, str, str, repr]
    hide: part
-   id: value
    label: Default Value
    dtype: ${ type }
    default: '0'
value: ${ value }

templates:
    imports: |-
        from gnuradio import eng_notation
        import bokehgui
    var_make: self.${id}_val = ${id} = ${value}
    make: "\n% if not label:\n\t<% label = '\"%s\"'%id %>\n% endif\nself.${id} = bokehgui.label(self.widget_lst,\
        \ str(${id}), ${label+\": \"})\n  "
    callbacks:
    - self.set_${id}_val(${value})
    - self.${id}.set_value(str(${value}))

documentation: |-
    This block creates a variable with a label widget for text. Leave the label blank to use the variable id as the label.

file_format: 1
