# auto-generated by grc.converter

id: bokehgui_time_sink_x
label: Bokeh GUI Time Sink
category: '[Bokeh GUI]/Bokeh GUI Sinks'

parameters:
-   id: type
    label: Type
    dtype: enum
    default: complex
    options: [complex, float, msg_complex, msg_float]
    option_labels: [Complex, Float, Complex Message, Float Message]
    option_attributes:
        fcn: [time_sink_c_proc, time_sink_f_proc, time_sink_c_proc, time_sink_f_proc]
        plot: [time_sink_c, time_sink_f, time_sink_c, time_sink_f]
        t: [complex, float, message, message]
    hide: part
-   id: name
    label: Name
    dtype: string
    default: '""'
    hide: ${ ('none' if len(name) > 0 else 'part') }
-   id: ylabel
    label: Y Axis Label
    dtype: string
    default: Amplitude
    hide: part
-   id: yunit
    label: Y Axis Unit
    dtype: string
    default: '""'
    hide: part
-   id: ylog
    label: Y Axis Type
    dtype: enum
    default: 'False'
    options: ['False', 'True']
    option_labels: [Linear, Log]
    hide: part
-   id: xlabel
    label: X Axis Label
    dtype: string
    default: Time
    hide: part
-   id: xunit
    label: X Axis Unit
    dtype: string
    default: '""'
    hide: part
-   id: xlog
    label: X Axis Type
    dtype: enum
    default: 'False'
    options: ['False', 'True']
    option_labels: [Linear, Log]
    hide: part
-   id: size
    label: Number of Points
    dtype: int
    default: '1024'
    hide: ${ ('all' if type.t == 'message' else 'none') }
-   id: srate
    label: Sample Rate
    dtype: float
    default: samp_rate
-   id: grid
    label: Grid
    dtype: enum
    default: 'False'
    options: ['True', 'False']
    option_labels: ['Yes', 'No']
    hide: part
-   id: ymin
    label: Y min
    dtype: float
    default: '-1'
    hide: part
-   id: ymax
    label: Y max
    dtype: float
    default: '1'
    hide: part
-   id: nconnections
    label: Number of Inputs
    dtype: int
    default: '1'
    hide: ${ ('all' if type.t == 'message' else 'part') }
-   id: update_time
    label: Update Period
    dtype: int
    default: '100'
    hide: part
-   id: placement
    label: Placement
    dtype: int_vector
    hide: part
-   id: entags
    label: Disp. Tags
    dtype: enum
    default: 'True'
    options: ['True', 'False']
    option_labels: ['Yes', 'No']
    hide: ${ ('all' if type.t == 'message' else 'part') }
-   id: tr_mode
    label: Trigger Mode
    category: Trigger
    dtype: enum
    default: bokehgui.TRIG_MODE_FREE
    options: [bokehgui.TRIG_MODE_FREE, bokehgui.TRIG_MODE_AUTO, bokehgui.TRIG_MODE_NORM,
        bokehgui.TRIG_MODE_TAG]
    option_labels: [Free, Auto, Normal, Tag]
    hide: part
-   id: tr_slope
    label: Trigger Slope
    category: Trigger
    dtype: enum
    default: bokehgui.TRIG_SLOPE_POS
    options: [bokehgui.TRIG_SLOPE_POS, bokehgui.TRIG_SLOPE_NEG]
    option_labels: [Positive, Negative]
    hide: part
-   id: tr_level
    label: Trigger Level
    category: Trigger
    dtype: float
    default: '0.0'
    hide: part
-   id: tr_delay
    label: Trigger Delay
    category: Trigger
    dtype: float
    default: '0'
    hide: part
-   id: tr_chan
    label: Trigger Channel
    category: Trigger
    dtype: int
    default: '0'
    hide: part
-   id: tr_tag
    label: Trigger Tag Key
    category: Trigger
    dtype: string
    default: '""'
    hide: part
-   id: legend
    label: Legend
    category: Config
    dtype: enum
    default: 'True'
    options: ['True', 'False']
    option_labels: ['Yes', 'No']
    hide: part
-   id: axislabels
    label: Axis Labels
    category: Config
    dtype: enum
    default: 'True'
    options: ['True', 'False']
    option_labels: ['Yes', 'No']
    hide: part
-   id: label1
    label: Line 1 Label
    category: Config
    dtype: string
    hide: ${ ('part' if int(nconnections) >= 1 else 'all') }
-   id: width1
    label: Line 1 Width
    category: Config
    dtype: int
    default: '1'
    hide: ${ ('part' if int(nconnections) >= 1 else 'all') }
-   id: color1
    label: Line 1 Color
    category: Config
    dtype: enum
    options: ['"blue"', '"red"', '"green"', '"black"', '"cyan"', '"magenta"', '"yellow"',
        '"darkred"', '"darkgreen"', '"darkblue"']
    option_labels: [Blue, Red, Green, Black, Cyan, Magenta, Yellow, Dark Red, Dark
            Green, Dark Blue]
    hide: ${ ('part' if int(nconnections) >= 1 else 'all') }
-   id: style1
    label: Line 1 Style
    category: Config
    dtype: enum
    options: ['"solid"', '"dashed"', '"dotted"', '"dashdot"', '"None"']
    option_labels: [Solid, Dash, Dots, Dash-Dot, None]
    hide: ${ ('part' if int(nconnections) >= 1 else 'all') }
-   id: marker1
    label: Line 1 Marker
    category: Config
    dtype: enum
    options: [None, '''o''', '''*''', '''o+''', '''+''', '''d''', '''d+''', '''v''',
        '''s''', '''s+''', '''sx''', '''^''', '''x''']
    option_labels: [None, Circle, Star, Circle Plus, Plus, Diamond, Diamond Plus,
        Down Triangle, Square, Square Plus, Square Cross, Triangle, X-Cross]
    hide: ${ ('part' if int(nconnections) >= 1 else 'all') }
-   id: alpha1
    label: Line 1 Alpha
    category: Config
    dtype: float
    default: '1.0'
    hide: ${ ('part' if int(nconnections) >= 1 else 'all') }
-   id: label2
    label: Line 2 Label
    dtype: ''
    hide: ${ ('part' if (int(nconnections) >= 2 or (type == "complex" and int(nconnections)
        >= 1) or (type == "msg_complex")) and (not type == "msg_float") else 'all')
        }
-   id: width2
    label: Line 2 Width
    dtype: ''
    hide: ${ ('part' if (int(nconnections) >= 2 or (type == "complex" and int(nconnections)
        >= 1) or (type == "msg_complex")) and (not type == "msg_float") else 'all')
        }
-   id: color2
    label: Line 2 Color
    dtype: ''
    default: '"red"'
    hide: ${ ('part' if (int(nconnections) >= 2 or (type == "complex" and int(nconnections)
        >= 1) or (type == "msg_complex")) and (not type == "msg_float") else 'all')
        }
-   id: style2
    label: Line 2 Style
    dtype: ''
    hide: ${ ('part' if (int(nconnections) >= 2 or (type == "complex" and int(nconnections)
        >= 1) or (type == "msg_complex")) and (not type == "msg_float") else 'all')
        }
-   id: marker2
    label: Line 2 Marker
    dtype: ''
    hide: ${ ('part' if (int(nconnections) >= 2 or (type == "complex" and int(nconnections)
        >= 1) or (type == "msg_complex")) and (not type == "msg_float") else 'all')
        }
-   id: alpha2
    label: Line 2 Alpha
    dtype: ''
    hide: ${ ('part' if (int(nconnections) >= 2 or (type == "complex" and int(nconnections)
        >= 1) or (type == "msg_complex")) and (not type == "msg_float") else 'all')
        }
-   id: label3
    label: Line 3 Label
    dtype: ''
    hide: ${ ('part' if ((int(nconnections) >= 3 or (type == "complex" and int(nconnections)
        >= 2)) and not type.t == "message") else 'all') }
-   id: width3
    label: Line 3 Width
    dtype: ''
    hide: ${ ('part' if ((int(nconnections) >= 3 or (type == "complex" and int(nconnections)
        >= 2)) and not type.t == "message") else 'all') }
-   id: color3
    label: Line 3 Color
    dtype: ''
    default: '"green"'
    hide: ${ ('part' if ((int(nconnections) >= 3 or (type == "complex" and int(nconnections)
        >= 2)) and not type.t == "message") else 'all') }
-   id: style3
    label: Line 3 Style
    dtype: ''
    hide: ${ ('part' if ((int(nconnections) >= 3 or (type == "complex" and int(nconnections)
        >= 2)) and not type.t == "message") else 'all') }
-   id: marker3
    label: Line 3 Marker
    dtype: ''
    hide: ${ ('part' if ((int(nconnections) >= 3 or (type == "complex" and int(nconnections)
        >= 2)) and not type.t == "message") else 'all') }
-   id: alpha3
    label: Line 3 Alpha
    dtype: ''
    hide: ${ ('part' if ((int(nconnections) >= 3 or (type == "complex" and int(nconnections)
        >= 2)) and not type.t == "message") else 'all') }
-   id: label4
    label: Line 4 Label
    dtype: ''
    hide: ${ ('part' if ((int(nconnections) >= 4 or (type == "complex" and int(nconnections)
        >= 2)) and not type.t == "message") else 'all') }
-   id: width4
    label: Line 4 Width
    dtype: ''
    hide: ${ ('part' if ((int(nconnections) >= 4 or (type == "complex" and int(nconnections)
        >= 2)) and not type.t == "message") else 'all') }
-   id: color4
    label: Line 4 Color
    dtype: ''
    default: '"black"'
    hide: ${ ('part' if ((int(nconnections) >= 4 or (type == "complex" and int(nconnections)
        >= 2)) and not type.t == "message") else 'all') }
-   id: style4
    label: Line 4 Style
    dtype: ''
    hide: ${ ('part' if ((int(nconnections) >= 4 or (type == "complex" and int(nconnections)
        >= 2)) and not type.t == "message") else 'all') }
-   id: marker4
    label: Line 4 Marker
    dtype: ''
    hide: ${ ('part' if ((int(nconnections) >= 4 or (type == "complex" and int(nconnections)
        >= 2)) and not type.t == "message") else 'all') }
-   id: alpha4
    label: Line 4 Alpha
    dtype: ''
    hide: ${ ('part' if ((int(nconnections) >= 4 or (type == "complex" and int(nconnections)
        >= 2)) and not type.t == "message") else 'all') }
-   id: label5
    label: Line 5 Label
    dtype: ''
    hide: ${ ('part' if ((int(nconnections) >= 5 or (type == "complex" and int(nconnections)
        >= 3)) and not type.t == "message") else 'all') }
-   id: width5
    label: Line 5 Width
    dtype: ''
    hide: ${ ('part' if ((int(nconnections) >= 5 or (type == "complex" and int(nconnections)
        >= 3)) and not type.t == "message") else 'all') }
-   id: color5
    label: Line 5 Color
    dtype: ''
    default: '"cyan"'
    hide: ${ ('part' if ((int(nconnections) >= 5 or (type == "complex" and int(nconnections)
        >= 3)) and not type.t == "message") else 'all') }
-   id: style5
    label: Line 5 Style
    dtype: ''
    hide: ${ ('part' if ((int(nconnections) >= 5 or (type == "complex" and int(nconnections)
        >= 3)) and not type.t == "message") else 'all') }
-   id: marker5
    label: Line 5 Marker
    dtype: ''
    hide: ${ ('part' if ((int(nconnections) >= 5 or (type == "complex" and int(nconnections)
        >= 3)) and not type.t == "message") else 'all') }
-   id: alpha5
    label: Line 5 Alpha
    dtype: ''
    hide: ${ ('part' if ((int(nconnections) >= 5 or (type == "complex" and int(nconnections)
        >= 3)) and not type.t == "message") else 'all') }
-   id: label6
    label: Line 6 Label
    dtype: ''
    hide: ${ ('part' if ((int(nconnections) >= 6 or (type == "complex" and int(nconnections)
        >= 3)) and not type.t == "message") else 'all') }
-   id: width6
    label: Line 6 Width
    dtype: ''
    hide: ${ ('part' if ((int(nconnections) >= 6 or (type == "complex" and int(nconnections)
        >= 3)) and not type.t == "message") else 'all') }
-   id: color6
    label: Line 6 Color
    dtype: ''
    default: '"magenta"'
    hide: ${ ('part' if ((int(nconnections) >= 6 or (type == "complex" and int(nconnections)
        >= 3)) and not type.t == "message") else 'all') }
-   id: style6
    label: Line 6 Style
    dtype: ''
    hide: ${ ('part' if ((int(nconnections) >= 6 or (type == "complex" and int(nconnections)
        >= 3)) and not type.t == "message") else 'all') }
-   id: marker6
    label: Line 6 Marker
    dtype: ''
    hide: ${ ('part' if ((int(nconnections) >= 6 or (type == "complex" and int(nconnections)
        >= 3)) and not type.t == "message") else 'all') }
-   id: alpha6
    label: Line 6 Alpha
    dtype: ''
    hide: ${ ('part' if ((int(nconnections) >= 6 or (type == "complex" and int(nconnections)
        >= 3)) and not type.t == "message") else 'all') }
-   id: label7
    label: Line 7 Label
    dtype: ''
    hide: ${ ('part' if ((int(nconnections) >= 7 or (type == "complex" and int(nconnections)
        >= 4)) and not type.t == "message") else 'all') }
-   id: width7
    label: Line 7 Width
    dtype: ''
    hide: ${ ('part' if ((int(nconnections) >= 7 or (type == "complex" and int(nconnections)
        >= 4)) and not type.t == "message") else 'all') }
-   id: color7
    label: Line 7 Color
    dtype: ''
    default: '"yellow"'
    hide: ${ ('part' if ((int(nconnections) >= 7 or (type == "complex" and int(nconnections)
        >= 4)) and not type.t == "message") else 'all') }
-   id: style7
    label: Line 7 Style
    dtype: ''
    hide: ${ ('part' if ((int(nconnections) >= 7 or (type == "complex" and int(nconnections)
        >= 4)) and not type.t == "message") else 'all') }
-   id: marker7
    label: Line 7 Marker
    dtype: ''
    hide: ${ ('part' if ((int(nconnections) >= 7 or (type == "complex" and int(nconnections)
        >= 4)) and not type.t == "message") else 'all') }
-   id: alpha7
    label: Line 7 Alpha
    dtype: ''
    hide: ${ ('part' if ((int(nconnections) >= 7 or (type == "complex" and int(nconnections)
        >= 4)) and not type.t == "message") else 'all') }
-   id: label8
    label: Line 8 Label
    dtype: ''
    hide: ${ ('part' if ((int(nconnections) >= 8 or (type == "complex" and int(nconnections)
        >= 4)) and not type.t == "message") else 'all') }
-   id: width8
    label: Line 8 Width
    dtype: ''
    hide: ${ ('part' if ((int(nconnections) >= 8 or (type == "complex" and int(nconnections)
        >= 4)) and not type.t == "message") else 'all') }
-   id: color8
    label: Line 8 Color
    dtype: ''
    default: '"dark red"'
    hide: ${ ('part' if ((int(nconnections) >= 8 or (type == "complex" and int(nconnections)
        >= 4)) and not type.t == "message") else 'all') }
-   id: style8
    label: Line 8 Style
    dtype: ''
    hide: ${ ('part' if ((int(nconnections) >= 8 or (type == "complex" and int(nconnections)
        >= 4)) and not type.t == "message") else 'all') }
-   id: marker8
    label: Line 8 Marker
    dtype: ''
    hide: ${ ('part' if ((int(nconnections) >= 8 or (type == "complex" and int(nconnections)
        >= 4)) and not type.t == "message") else 'all') }
-   id: alpha8
    label: Line 8 Alpha
    dtype: ''
    hide: ${ ('part' if ((int(nconnections) >= 8 or (type == "complex" and int(nconnections)
        >= 4)) and not type.t == "message") else 'all') }
-   id: label9
    label: Line 9 Label
    dtype: ''
    hide: ${ ('part' if ((int(nconnections) >= 9 or (type == "complex" and int(nconnections)
        >= 5)) and not type.t == "message") else 'all') }
-   id: width9
    label: Line 9 Width
    dtype: ''
    hide: ${ ('part' if ((int(nconnections) >= 9 or (type == "complex" and int(nconnections)
        >= 5)) and not type.t == "message") else 'all') }
-   id: color9
    label: Line 9 Color
    dtype: ''
    default: '"dark green"'
    hide: ${ ('part' if ((int(nconnections) >= 9 or (type == "complex" and int(nconnections)
        >= 5)) and not type.t == "message") else 'all') }
-   id: style9
    label: Line 9 Style
    dtype: ''
    hide: ${ ('part' if ((int(nconnections) >= 9 or (type == "complex" and int(nconnections)
        >= 5)) and not type.t == "message") else 'all') }
-   id: marker9
    label: Line 9 Marker
    dtype: ''
    hide: ${ ('part' if ((int(nconnections) >= 9 or (type == "complex" and int(nconnections)
        >= 5)) and not type.t == "message") else 'all') }
-   id: alpha9
    label: Line 9 Alpha
    dtype: ''
    hide: ${ ('part' if ((int(nconnections) >= 9 or (type == "complex" and int(nconnections)
        >= 5)) and not type.t == "message") else 'all') }
-   id: label10
    label: Line 10 Label
    dtype: ''
    hide: ${ ('part' if ((int(nconnections) >= 10 or (type == "complex" and int(nconnections)
        >= 5)) and not type.t == "message") else 'all') }
-   id: width10
    label: Line 10 Width
    dtype: ''
    hide: ${ ('part' if ((int(nconnections) >= 10 or (type == "complex" and int(nconnections)
        >= 5)) and not type.t == "message") else 'all') }
-   id: color10
    label: Line 10 Color
    dtype: ''
    default: '"dark blue"'
    hide: ${ ('part' if ((int(nconnections) >= 10 or (type == "complex" and int(nconnections)
        >= 5)) and not type.t == "message") else 'all') }
-   id: style10
    label: Line 10 Style
    dtype: ''
    hide: ${ ('part' if ((int(nconnections) >= 10 or (type == "complex" and int(nconnections)
        >= 5)) and not type.t == "message") else 'all') }
-   id: marker10
    label: Line 10 Marker
    dtype: ''
    hide: ${ ('part' if ((int(nconnections) >= 10 or (type == "complex" and int(nconnections)
        >= 5)) and not type.t == "message") else 'all') }
-   id: alpha10
    label: Line 10 Alpha
    dtype: ''
    hide: ${ ('part' if ((int(nconnections) >= 10 or (type == "complex" and int(nconnections)
        >= 5)) and not type.t == "message") else 'all') }

inputs:
-   domain: stream
    dtype: ${ type.t }
    multiplicity: ${ (0 if type.t == 'message' else nconnections) }
    optional: true
asserts:
- ${ len(placement) == 4 or len(placement) == 2 }
- ${ all([i >= 0 for i in placement]) }

templates:
    imports: import bokehgui
    make: "bokehgui.$(type.fcn)($size, $srate, $name, % if type.t == 'message' then\
        \ 0 else nconnections#):\nself.$(id)_plot = bokehgui.$(type.plot)(self.doc,\
        \ self.plot_lst, self.$(id), is_message = % if type.t == 'message' then True\
        \ else False#):\n\nlabels = [${label1}, ${label2}, ${label3}, ${label4}, ${label5},\n\
        \          ${label6}, ${label7}, ${label8}, ${label9}, ${label10}]\nlegend_list\
        \ = []\n% if (type == 'complex' or type == 'msg_complex'):\nfor i in xrange(%\
        \ if type.t == 'message' then 2 else 2*nconnections#)::\n    if len(labels[i])\
        \ == 0:\n        if(i % 2 == 0):\n            legend_list.append(\"Re{{Data\
        \ {0}}}\".format(i/2))\n        else:\n            legend_list.append(\"Im{{Data\
        \ {0}}}\".format(i/2))\n    else:\n        legend_list.append(labels[i])\n\
        % else:\nfor i in xrange(% if type.t == 'message' then 1 else nconnections#)::\n\
        \    if len(labels[i]) == 0:\n        legend_list.append(\"Data {0}\".format(i))\n\
        \    else:\n        legend_list.append(labels[i])\n% endif\n\nself.${id}_plot.initialize(log_x\
        \ = ${xlog},\n                           log_y = ${ylog},\n              \
        \             update_time = ${update_time},\n                           legend_list\
        \ = legend_list)\n\nself.${id}_plot.set_y_axis([${ymin}, ${ymax}])\n% if (yunit\
        \ == \"\"):\nself.${id}_plot.set_y_label(${ylabel})\n% else:\nself.${id}_plot.set_y_label(${ylabel}\
        \ + '(' +${yunit+')'})\n% endif\n% if (xunit == \"\"):\nself.${id}_plot.set_x_label(${xlabel})\n\
        % else:\nself.${id}_plot.set_x_label(${xlabel} + '(' +${xunit+')'})\n% endif\n\
        \nself.${id}_plot.enable_tags(-1, ${entags})\nself.${id}_plot.set_trigger_mode(${tr_mode},\
        \ ${tr_slope}, ${tr_level}, ${tr_delay}, ${tr_chan}, ${tr_tag})\nself.${id}_plot.enable_grid(${grid})\n\
        self.${id}_plot.enable_axis_labels(${axislabels})\nself.${id}_plot.disable_legend(not\
        \ ${legend})\nself.${id}_plot.set_layout(*(${placement}))\n\ncolors = [${color1},\
        \ ${color2}, ${color3}, ${color4}, ${color5},\n          ${color6}, ${color7},\
        \ ${color8}, ${color9}, ${color10}]\nwidths = [${width1}, ${width2}, ${width3},\
        \ ${width4}, ${width5},\n          ${width6}, ${width7}, ${width8}, ${width9},\
        \ ${width10}]\nstyles = [${style1}, ${style2}, ${style3}, ${style4}, ${style5},\n\
        \          ${style6}, ${style7}, ${style8}, ${style9}, ${style10}]\nmarkers\
        \ = [${marker1}, ${marker2}, ${marker3}, ${marker4}, ${marker5},\n       \
        \    ${marker6}, ${marker7}, ${marker8}, ${marker9}, ${marker10}]\nalphas\
        \ = [${alpha1}, ${alpha2}, ${alpha3}, ${alpha4}, ${alpha5},\n          ${alpha6},\
        \ ${alpha7}, ${alpha8}, ${alpha9}, ${alpha10}]\n% if (type == 'complex' or\
        \ type == 'msg_complex'):\nfor i in xrange(% if type.t == 'message' then 2\
        \ else 2*nconnections#)::\n    self.${id}_plot.format_line(i, colors[i], widths[i],\
        \ styles[i], markers[i], alphas[i])\n% else:\nfor i in xrange(% if type.t\
        \ == 'message' then 1 else nconnections#)::\n    self.${id}_plot.format_line(i,\
        \ colors[i], widths[i], styles[i], markers[i], alphas[i])\n% endif\n\n  "
    callbacks:
    - set_x_axis([${min}, ${max}])
    - set_title(${which}, ${title})
    - set_color(${which}, ${color})
    - set_y_axis([${ymin}, ${ymax}])
    - set_samp_rate(${srate})
    - self.${id}_plot.set_trigger_mode(${tr_mode}, ${tr_slope}, ${tr_level}, ${tr_delay},
        ${tr_chan}, ${tr_tag})

file_format: 1
